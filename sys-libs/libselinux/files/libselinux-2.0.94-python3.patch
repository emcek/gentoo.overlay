diff -ur libselinux-2.0.94.orig//src/audit2why.c libselinux-2.0.94/src/audit2why.c
--- libselinux-2.0.94.orig//src/audit2why.c	2010-03-24 20:40:05.000000000 +0100
+++ libselinux-2.0.94/src/audit2why.c	2011-07-05 21:21:00.845000709 +0200
@@ -24,6 +24,18 @@
 #define CONSTRAINT 4
 #define RBAC 5
 
+/*
+ * Python 3 support overrides
+ */
+
+#if PY_VERSION_HEX >= 0x03000000
+#define PyString_Check(x) 0
+#define PyString_AsString(x) PLyUnicode_AsString(x)
+#define PyString_FromString(x) PLyUnicode_FromString(x)
+#define PyInt_FromLong(x) PyLong_FromLong(x)
+#endif
+
+
 struct boolean_t {
 	char *name;
 	int active;
@@ -353,7 +365,7 @@
 		strObj = PyList_GetItem(listObj, i); /* Can't fail */
 		
 		/* make it a string */
-		permstr = PyString_AsString( strObj );
+		permstr = SWIG_Python_str_AsChar( strObj );
 		
 		perm = string_to_av_perm(tclass, permstr);
 		if (!perm) {
diff -ur libselinux-2.0.94.orig//src/selinuxswig_wrap.c libselinux-2.0.94/src/selinuxswig_wrap.c
--- libselinux-2.0.94.orig//src/selinuxswig_wrap.c	2010-03-24 20:40:05.000000000 +0100
+++ libselinux-2.0.94/src/selinuxswig_wrap.c	2011-07-05 21:23:37.697000718 +0200
@@ -298,7 +298,6 @@
 #  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
 #endif
 
-
 #include <string.h>
 
 #ifdef __cplusplus
@@ -766,7 +765,7 @@
   Py_XDECREF(str);
   return newstr;
 #else
-  return PyString_AsString(str);
+  return Py_String_AsString(str);
 #endif
 }
 
@@ -2773,7 +2772,7 @@
     PyBytes_AsStringAndSize(obj, &cstr, &len);
     if(alloc) *alloc = SWIG_NEWOBJ;
 #else
-    PyString_AsStringAndSize(obj, &cstr, &len);
+    Py__String_AsStringAndSize(obj, &cstr, &len);
 #endif
     if (cptr) {
       if (alloc) {
@@ -11421,7 +11420,7 @@
     for(i = 0; i < size; i++) {
       s = PySequence_GetItem(obj2, i);
       arg3[i] = (char*) malloc(PyString_Size(s) + 1);
-      strcpy(arg3[i], PyString_AsString(s));
+      strcpy(arg3[i], SWIG_Python_str_AsChar(s));
     }
     arg3[size] = NULL;
   }
@@ -11448,7 +11447,7 @@
     for(i = 0; i < size; i++) {
       s = PySequence_GetItem(obj3, i);
       arg4[i] = (char*) malloc(PyString_Size(s) + 1);
-      strcpy(arg4[i], PyString_AsString(s));
+      strcpy(arg4[i], SWIG_Python_str_AsChar(s));
     }
     arg4[size] = NULL;
   }
