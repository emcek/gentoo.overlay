diff -ur libselinux-2.0.94.orig//src/audit2why.c libselinux-2.0.94/src/audit2why.c
--- libselinux-2.0.94.orig//src/audit2why.c	2010-03-24 20:40:05.000000000 +0100
+++ libselinux-2.0.94/src/audit2why.c	2011-07-05 21:29:01.017000737 +0200
@@ -24,6 +24,18 @@
 #define CONSTRAINT 4
 #define RBAC 5
 
+/*
+ * Python 3 support overrides
+ */
+
+#if PY_VERSION_HEX >= 0x03000000
+#define PyString_Check(x) 0
+#define PyString_AsString(x) PLyUnicode_AsString(x)
+#define PyString_FromString(x) PLyUnicode_FromString(x)
+#define PyInt_FromLong(x) PyLong_FromLong(x)
+#endif
+
+
 struct boolean_t {
 	char *name;
 	int active;
diff -ur libselinux-2.0.94.orig//src/selinuxswig_python.i libselinux-2.0.94/src/selinuxswig_python.i
--- libselinux-2.0.94.orig//src/selinuxswig_python.i	2010-03-24 20:40:05.000000000 +0100
+++ libselinux-2.0.94/src/selinuxswig_python.i	2011-07-05 21:31:39.586000746 +0200
@@ -145,7 +145,11 @@
 	for(i = 0; i < size; i++) {
 		s = PySequence_GetItem($input, i);
 		$1[i] = (char*) malloc(PyString_Size(s) + 1);
+#if PY_VERSION_HEX >= 0x03000000
+		strcpy($1[i], PLyUnicode_AsString(s));
+#else
 		strcpy($1[i], PyString_AsString(s));
+#endif
 	}
 	$1[size] = NULL;
 }
diff -ur libselinux-2.0.94.orig//src/selinuxswig_wrap.c libselinux-2.0.94/src/selinuxswig_wrap.c
--- libselinux-2.0.94.orig//src/selinuxswig_wrap.c	2010-03-24 20:40:05.000000000 +0100
+++ libselinux-2.0.94/src/selinuxswig_wrap.c	2011-07-05 21:27:32.507000732 +0200
@@ -298,6 +298,17 @@
 #  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
 #endif
 
+/*
+ * Python 3 support overrides
+ */
+
+#if PY_VERSION_HEX >= 0x03000000
+#define PyString_Check(x) 0
+#define PyString_AsString(x) PLyUnicode_AsString(x)
+#define PyString_FromString(x) PLyUnicode_FromString(x)
+#define PyInt_FromLong(x) PyLong_FromLong(x)
+#endif
+
 
 #include <string.h>
 
@@ -11421,7 +11432,7 @@
     for(i = 0; i < size; i++) {
       s = PySequence_GetItem(obj2, i);
       arg3[i] = (char*) malloc(PyString_Size(s) + 1);
-      strcpy(arg3[i], PyString_AsString(s));
+      strcpy(arg3[i], SWIG_Python_str_AsChar(s));
     }
     arg3[size] = NULL;
   }
@@ -11448,7 +11459,7 @@
     for(i = 0; i < size; i++) {
       s = PySequence_GetItem(obj3, i);
       arg4[i] = (char*) malloc(PyString_Size(s) + 1);
-      strcpy(arg4[i], PyString_AsString(s));
+      strcpy(arg4[i], SWIG_Python_str_AsChar(s));
     }
     arg4[size] = NULL;
   }
