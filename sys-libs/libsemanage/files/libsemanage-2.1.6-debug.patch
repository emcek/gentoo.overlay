diff -ur libsemanage-2.1.6.orig/src/database.c libsemanage-2.1.6/src/database.c
--- libsemanage-2.1.6.orig/src/database.c	2012-05-22 21:50:23.414071391 +0200
+++ libsemanage-2.1.6/src/database.c	2012-05-23 21:18:37.475251739 +0200
@@ -141,6 +141,8 @@
 		 const record_key_t * key, int *response)
 {
 
+	fprintf(stderr, "dbase_exists: key is %u\n", key);
+
 	if (enter_ro(handle, dconfig) < 0)
 		return STATUS_ERR;
 
diff -ur libsemanage-2.1.6.orig/src/fcontext_record.c libsemanage-2.1.6/src/fcontext_record.c
--- libsemanage-2.1.6.orig/src/fcontext_record.c	2012-05-22 21:50:23.416071391 +0200
+++ libsemanage-2.1.6/src/fcontext_record.c	2012-05-26 08:38:18.729110312 +0200
@@ -45,9 +45,16 @@
 		    "create file context key");
 		return STATUS_ERR;
 	}
-	tmp_key->expr = expr;
+	tmp_key->expr = (char *) calloc(strlen(expr)+1, sizeof(char));
+	if (!tmp_key->expr) {
+		ERR(handle, "out of memory, could not create file context key.");
+		return STATUS_ERR;
+	}
+	strcpy(tmp_key->expr, expr);
 	tmp_key->type = type;
 
+	fprintf(stderr, "DEBUG - created key for %p, expression \"%s\" is at %p\n", tmp_key, tmp_key->expr, tmp_key->expr);
+
 	*key_ptr = tmp_key;
 	return STATUS_SUCCESS;
 }
@@ -74,7 +81,7 @@
 
 void semanage_fcontext_key_free(semanage_fcontext_key_t * key)
 {
-	free(key);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, key);	free(key);
 }
 
 hidden_def(semanage_fcontext_key_free)
@@ -172,7 +179,7 @@
 		ERR(handle, "out of memory, " "could not set regexp string");
 		return STATUS_ERR;
 	}
-	free(fcontext->expr);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, fcontext->expr);	free(fcontext->expr);
 	fcontext->expr = tmp_expr;
 	return STATUS_SUCCESS;
 }
@@ -291,9 +298,9 @@
 	if (!fcontext)
 		return;
 
-	free(fcontext->expr);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, fcontext->expr);	free(fcontext->expr);
 	semanage_context_free(fcontext->con);
-	free(fcontext);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, fcontext);	free(fcontext);
 }
 
 hidden_def(semanage_fcontext_free)
diff -ur libsemanage-2.1.6.orig/src/fcontexts_file.c libsemanage-2.1.6/src/fcontexts_file.c
--- libsemanage-2.1.6.orig/src/fcontexts_file.c	2012-05-22 21:50:23.415071391 +0200
+++ libsemanage-2.1.6/src/fcontexts_file.c	2012-05-25 21:55:34.079027998 +0200
@@ -63,7 +63,7 @@
 			goto err;
 		if (fprintf(str, "%s\n", con_str) < 0)
 			goto err;
-		free(con_str);
+		fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, con_str);	free(con_str);
 		con_str = NULL;
 	} else {
 		if (fprintf(str, "<<none>>\n") < 0)
@@ -74,7 +74,7 @@
       err:
 	ERR(handle, "could not print file context for "
 	    "%s (%s) to stream", expr, tstr);
-	free(con_str);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, con_str);	free(con_str);
 	return STATUS_ERR;
 }
 
@@ -95,7 +95,7 @@
 		goto err;
 	if (semanage_fcontext_set_expr(handle, fcontext, str) < 0)
 		goto err;
-	free(str);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, str);	free(str);
 	str = NULL;
 
 	/* Type */
@@ -119,7 +119,7 @@
 		semanage_fcontext_set_type(fcontext, SEMANAGE_FCONTEXT_REG);
 	else
 		goto process_context;
-	free(str);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, str);	free(str);
 	str = NULL;
 
 	/* Context */
@@ -134,7 +134,7 @@
 		    str, info->filename, info->lineno, info->orig_line);
 		goto err;
 	}
-	free(str);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, str);	free(str);
 	str = NULL;
 
 	if (con && semanage_fcontext_set_con(handle, fcontext, con) < 0)
@@ -152,7 +152,7 @@
 
       err:
 	ERR(handle, "could not parse file context record");
-	free(str);
+	fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, str);	free(str);
 	semanage_context_free(con);
 	parse_dispose_line(info);
 	return STATUS_ERR;
diff -ur libsemanage-2.1.6.orig/src/fcontexts_local.c libsemanage-2.1.6/src/fcontexts_local.c
--- libsemanage-2.1.6.orig/src/fcontexts_local.c	2012-05-22 21:50:23.415071391 +0200
+++ libsemanage-2.1.6/src/fcontexts_local.c	2012-05-25 21:55:34.080027998 +0200
@@ -111,7 +111,7 @@
 	if (semanage_context_to_string(handle, con, &str) >= 0) {
 		ERR(handle, "invalid context %s specified for %s [%s]",
 		    str, expr, type_str);
-		free(str);
+		fprintf(stderr, "DEBUG - %s.%d free location %p\n", __FILE__, __LINE__, str);	free(str);
 	} else
 		ERR(handle, "invalid context specified for %s [%s]",
 		    expr, type_str);
